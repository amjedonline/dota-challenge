
input {
  http {
    host => "127.0.0.1" # default: 0.0.0.0
    port => 31311 # default: 8080
  }
}

filter {
  split { terminator => "\n" }
  grok {
    match => {
      "message" => [
        "\[%{TIME:timestamp}\] %{USERNAME:hero} buys item %{WORD:item}",
        "\[%{TIME:timestamp}\] %{USERNAME:killed} is killed by %{USERNAME:killer}",
        "\[%{TIME:timestamp}\] %{USERNAME:hero} casts ability %{WORD:spell} \(lvl %{NUMBER:level:int}\) on %{USERNAME:casted_on_hero}",
        "\[%{TIME:timestamp}\] %{USERNAME:hero} hits %{USERNAME:damaged_hero} with %{WORD:damaged_with} for %{NUMBER:damage_score:int} damage \(%{NUMBER:score_before_damage:int}\-\>%{NUMBER:score_after_damage:int}\)"
      ]
    }
    break_on_match => true
  }
}

output {
  stdout {}
}

output {
  if[item]{
    jdbc {
      connection_string => 'jdbc:postgresql://127.0.0.1:5432/postgres?user=postgres&password=mysecretpassword'
      statement => [ "INSERT INTO items(match_id, timestamp, hero, item) VALUES(?, ?, ?, ?)", "[headers][match]", "timestamp", "hero", "item"]
    }
  }
  else if[killer]{
    jdbc {
      connection_string => 'jdbc:postgresql://127.0.0.1:5432/postgres?user=postgres&password=mysecretpassword'
      statement => [ "INSERT INTO kills(match_id, timestamp, hero, killed_hero) VALUES(?, ?, ?, ?)", "[headers][match]", "timestamp", "killer", "killed"]
    }
  }
  else if[spell]{
    jdbc {
      connection_string => 'jdbc:postgresql://127.0.0.1:5432/postgres?user=postgres&password=mysecretpassword'
      statement => [ "INSERT INTO spells(match_id, timestamp, hero, spell, casted_on_hero, level) VALUES(?, ?, ?, ?, ?, ?)", "[headers][match]", "timestamp", "hero", "spell", "casted_on_hero", "level"]
    }
  }
  else if[damage_score]{
    jdbc {
      connection_string => 'jdbc:postgresql://127.0.0.1:5432/postgres?user=postgres&password=mysecretpassword'
      statement => [ "INSERT INTO damages(match_id, timestamp, hero, damaged_hero, damaged_with, damage_score, score_after_damage) VALUES(?, ?, ?, ?, ?, ?, ?)", "[headers][match]", "timestamp", "hero", "damaged_hero", "damaged_with", "damage_score", "score_after_damage"]
    }
  }
}
